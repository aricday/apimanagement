---
## database.yml
# Need to do this for idempotency, see
# 'localhost' needs to be the last item for idempotency, see
# http://ansible.cc/docs/modules.html#mysql-user

- debug: msg="ansible_hostname, inventory_hostname, database.host - {{ ansible_hostname }}, {{inventory_hostname}}, {{ database.host }}"

- name: Set the login_host to "localhost" if {{ database.host }} == {{ inventory_hostname }}
  set_fact:
    login_host: "localhost"
  when: "'{{database.host}}' == '{{inventory_hostname}}'"

- name: Set the login_host to {{ database.host }} if {{ database.host }} != {{ inventory_hostname }}
  set_fact:
    login_host: "{{ database.host }}"
  when: "'{{database.host}}' != '{{inventory_hostname}}'"

# - name: Acquire temporary root pass
#   shell: >
#       grep 'temporary password' /var/log/mysqld.log | awk '{print $11}'
#   register: mysql_root_temp_password

# - name: Change mysql password for root user
#   shell: >
#       mysql  -uroot -p{{ mysql_root_temp_password.stdout }} --connect-expired-password -e "ALTER USER 'root'@'localhost' IDENTIFIED BY  'UTWtziFHF0xgng=='; flush privileges; "
#   register: mysql_validate_password_changed

- name: Change mysql password policies
  shell: >
      mysql  -uroot --connect-expired-password -e "SET GLOBAL validate_password_length = 5; SET GLOBAL validate_password_mixed_case_count = 0; SET GLOBAL validate_password_special_char_count = 0; uninstall plugin validate_password; flush privileges; "
  register: mysql_password_policy_changed

- name: Change mysql password for root user
  shell: >
      mysql  -uroot --connect-expired-password -e "ALTER USER 'root'@'localhost' IDENTIFIED BY  '{{ database.admin.pass }}'; flush privileges; "
  register: mysql_password_changed

- name: copy .my.cnf file with root password credentials
  template: src=roles/mysql/templates/my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600

- name: update mysql root password for all root accounts
  mysql_user: name={{ database.admin.user }}
            host={{ item }}
            priv=*.*:ALL,GRANT
            login_password={{ database.admin.pass }}
            login_host={{ login_host }}
            login_port={{ database.port }}
            login_user={{ database.admin.user }}

  with_items:
    - 127.0.0.1
    - ::1
    - "%"
    - localhost
  register: mysql_validate_password_changed

- name: ensure anonymous users are not in the database
  mysql_user: name=''
            host={{ item }}
            state=absent
            login_host={{ login_host }}
            login_port={{ database.port }}
  with_items:
    - 127.0.0.1
    - ::1
    - "%"
    - localhost

- name: remove the test database
  mysql_db: name=test
          state=absent
          login_host={{ login_host }}
          login_port={{ database.port }}
